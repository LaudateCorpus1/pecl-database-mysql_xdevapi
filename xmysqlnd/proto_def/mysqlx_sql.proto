/*
  +----------------------------------------------------------------------+
  | PHP Version 7                                                        |
  +----------------------------------------------------------------------+
  | Copyright (c) The PHP Group                                |
  +----------------------------------------------------------------------+
  | This source file is subject to version 3.01 of the PHP license,      |
  | that is bundled with this package in the file LICENSE, and is        |
  | available through the world-wide-web at the following url:           |
  | http://www.php.net/license/3_01.txt                                  |
  | If you did not receive a copy of the PHP license and are unable to   |
  | obtain it through the world-wide-web, please send a note to          |
  | license@php.net so we can mail you a copy immediately.               |
  +----------------------------------------------------------------------+
*/
syntax = "proto2";

import "mysqlx.proto"; // comment_out_if PROTOBUF_LITE

// ifdef PROTOBUF_LITE: option optimize_for = LITE_RUNTIME;

/**
@namespace Mysqlx::Sql
@brief Messages of the MySQL Package
*/
package Mysqlx.Sql;
option java_package = "com.mysql.cj.x.protobuf";

import "mysqlx_datatypes.proto";

/*
Execute a statement in the given namespace.

@startuml "Execute Statements"
client -> server: StmtExecute
... zero or more Resultsets ...
server --> client: StmtExecuteOk
@enduml

@notice This message may generate a notice containing WARNINGs generated by
  its execution. This message may generate a  notice containing INFO messages
  generated by its execution.

@returns zero or more  @ref Mysqlx::Resultset followed by @ref Mysqlx::Sql::StmtExecuteOk
*/
message StmtExecute {
  /** namespace of the statement to be executed */
  optional string namespace = 3 [ default = "sql" ];

  /** statement that shall be executed  */
  required bytes stmt = 1;

  /** values for wildcard replacements */
  repeated Mysqlx.Datatypes.Any args = 2;

  /** send only type information for @ref Mysqlx::Resultset::ColumnMetaData,
      skipping names and others */
  optional bool compact_metadata = 4 [ default = false ];

  option (client_message_id) = SQL_STMT_EXECUTE; // comment_out_if PROTOBUF_LITE
}

/**
Statement executed successful
*/
message StmtExecuteOk {
  option (server_message_id) = SQL_STMT_EXECUTE_OK; // comment_out_if PROTOBUF_LITE
}


